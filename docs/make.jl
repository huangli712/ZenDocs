push!(LOAD_PATH, ENV["ZEN_CORE"])

using Documenter
using ZenCore

makedocs(
    sitename = "Zen",
    clean = false,
    authors = "Li Huang <huangli@caep.cn> and contributors",
    format = Documenter.HTML(
        prettyurls = false,
        ansicolor = true,
        repolink = "https://github.com/huangli712/Zen",
        size_threshold = 409600, # 400kb
        assets = ["assets/zen.css"],
        collapselevel = 1,
        inventory_version = "0.1.0",
    ),
    remotes = nothing,
    modules = [ZenCore],
    pages = [
        "Home" => "index.md",
        "Introduction" => Any[
            "Contents" => "intro/index.md",
            "Strongly correlated materials" => "intro/sces.md",
            "Density functional theory" => "intro/dft.md",
            "Dynamical mean-field theory" => "intro/dmft.md",
            "The DFT + DMFT method" => "intro/dft_dmft.md",
            "Motivation" => "intro/motivation.md",
            "Design philosophy" => "intro/design.md",
            "Features" => "intro/features.md",
            "Citation" => "intro/cite.md",
        ],
        "Getting started" => Any[
            "Contents" => "start/index.md",
            "Obtain" => "start/obtain.md",
            "Uncompress" => "start/uncompress.md",
            "Directory" => "start/directory.md",
            "Compile" => "start/compile.md",
            "Install" => "start/install.md",
            "Configure" => "start/configure.md",
        ],
        "Tutorials" => Any[
            "Contents" => "tutor/index.md",
            "SrVO3" => "tutor/SrVO3.md",
            "FeSe" => "tutor/FeSe.md",
            "MnO" => "tutor/MnO.md",
            "Ce" => "tutor/Ce.md",
        ],
        "Guide" => Any[
            "Contents" => "guide/index.md",
            "Running modes" => Any[
                "Standard Mode" => "guide/standard.md",
                "Interactive mode" => "guide/repl.md",
                "Script mode" => "guide/script.md",
            ],
            "Input files" => Any[],
            "Output files" => Any[
                "Standard output" => "guide/fterm.md",
                "case.cycle" => "guide/fcycle.md",
                "case.log" => "guide/flog.md",
                "case.stop" => "guide/fstop.md",
                "case.test" => "guide/ftest.md",    
            ],
            "Input parameters" => Any[
                "Block [PCASE]" => "guide/case.md",
                "Block [PDFT]" => "guide/dft.md",
                "Block [PDMFT]" => "guide/dmft.md",
                "Block [PIMP]" => "guide/impurity.md",
                "Block [PSOLVER]" => "guide/solver.md",
            ],
            "Auxiliary tools" => Any[],
        ],
        "Internals" => Any[
            "Contents" => "internals/index.md",
            "Computation framework" => Any[
                "Density functional theory" => "internals/framework/dft.md",
                "Dynamical mean-field theory" => "internals/framework/dmft.md",
                "Quantum impurity solver" => "internals/framework/qim.md",
                "Kohn-Sham Adaptor" => "internals/framework/adaptor.md",
                "Intermediate representation" => "internals/framework/ir.md",
                "Self-energy functions" => "internals/framework/selfenergy.md",
                "Mixer" => "internals/framework/mixer.md",
            ],
            "ZenCore APIs" => Any[
                "ZenCore" => "internals/apis/zencore.md",
                "Global" => "internals/apis/global.md",
                "Util" => "internals/apis/util.md",
                "Tetra" => "internals/apis/tetra.md",
                "Types" => "internals/apis/types.md",
                "Config" => "internals/apis/config.md",
                "Base" => "internals/apis/base.md",
                "VASP" => "internals/apis/vasp.md",
                "QE" => "internals/apis/qe.md",
                "PLO" => "internals/apis/plo.md",
                "Wannier" => "internals/apis/wannier.md",
                "IR" => "internals/apis/ir.md",
                "DMFT" => "internals/apis/dmft.md",
                "Solver" => "internals/apis/solver.md",
                "Sigma" => "internals/apis/sigma.md",
                "Mixer" => "internals/apis/mixer.md",
            ],
        ],
        "Theory" => Any[],
    ],
)
